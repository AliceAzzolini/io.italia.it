trigger:
- master

parameters:
  - name: environment
    displayName: Target Environment
    type: string
    default: prod
    values:
      - dev
      - prod

# variables set on azdevops to avoid circular dependency warning
# $(DEFAULT_BRANCH)
# $(MY_INDEX)
# $(BLOB_CONTAINER_NAME)
variables:
  ${{ if eq(parameters['environment'], 'dev') }}:
    AZURE_SUBSCRIPTION: $(DEV_AZURE_SUBSCRIPTION)
    STORAGE_ACCOUNT_NAME: $(DEV_STORAGE_ACCOUNT_NAME)
    PROFILE_CDN_NAME: $(DEV_PROFILE_CDN_NAME)
    ENDPOINT_NAME: $(DEV_ENDPOINT_NAME)
    RESOURCE_GROUP_NAME: $(DEV_RESOURCE_GROUP_NAME)
    JEKYLL_ENV: production
  ${{ if eq(parameters['environment'], 'prod') }}:
    AZURE_SUBSCRIPTION: $(PROD_AZURE_SUBSCRIPTION)
    STORAGE_ACCOUNT_NAME: $(PROD_STORAGE_ACCOUNT_NAME)
    PROFILE_CDN_NAME: $(PROD_PROFILE_CDN_NAME)
    ENDPOINT_NAME: $(PROD_ENDPOINT_NAME)
    RESOURCE_GROUP_NAME: $(PROD_RESOURCE_GROUP_NAME)
    JEKYLL_ENV: production

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: UseRubyVersion@0
  inputs:
    versionSpec: '>= 2.6.4'

- script: |
    gem install jekyll bundler
    bundle install --retry=3 --jobs=4
  displayName: 'bundle install'

- script: |
    bundle install
    JEKYLL_ENV=production bundle exec jekyll build --config _config.yml,_config_production.yml
  displayName: 'jekyll'

- task: CopyFiles@2
  displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
  inputs:
    SourceFolder: '_site'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)'
    artifactName: site

- task: AzureCLI@1
  displayName: 'Az Cli'
  inputs:
    azureSubscription: '$(AZURE_SUBSCRIPTION)'
    scriptLocation: inlineScript
    inlineScript: |
      az --version
